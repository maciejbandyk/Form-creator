{"version":3,"sources":["classes/LocStorage.ts","classes/DocumentList.ts","components/document-list/document-list.ts"],"names":[],"mappings":"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","file":"document-list.015edf19.js","sourceRoot":"..\\src","sourcesContent":["import { IDataStorage } from \"../interfaces/idata-storage\";\r\nimport { Form } from \"./Form\";\r\n\r\nexport class LocStorage implements IDataStorage {\r\n\r\n    constructor() {\r\n        this.DataStorage = window.localStorage;   \r\n    }\r\n\r\n    DataStorage: any;\r\n\r\n    saveDocument(documentObject: Form): string {\r\n        const savedDocument = this.DataStorage.setItem(`document-${Date.now()}`, JSON.stringify(documentObject));\r\n        return savedDocument;\r\n    }    \r\n\r\n    saveEditedDocument(documentObject: Form, key: string): string {\r\n        const savedDocument = this.DataStorage.setItem(key, JSON.stringify(documentObject));\r\n        return savedDocument;\r\n    }\r\n\r\n    loadDocument(key: string): object {\r\n        const loadedDocument = this.DataStorage.getItem(key);\r\n        return loadedDocument;\r\n    }\r\n\r\n    getDocuments(): string[] {\r\n        const documents: object = {...this.DataStorage};\r\n        const documentsArray: string[] = [];\r\n        for(let key in documents) {\r\n            if (key.substr(0,2)!='F-') {\r\n                if (!documents.hasOwnProperty(key)) continue;\r\n                documentsArray.push(key);\r\n            } \r\n        }\r\n        return documentsArray;\r\n    }\r\n\r\n    getForms(): string[] {\r\n        const formsArray: string[] = [];\r\n        const forms = {...this.DataStorage};\r\n        const formsKeysList = Object.keys(forms);\r\n        for (const name of formsKeysList) {\r\n            if (name.substr(0,2)=='F-') {\r\n                formsArray.push(name);\r\n            }\r\n        }\r\n        return formsArray;\r\n    }\r\n\r\n    removeDocument(key: string): void {\r\n        this.DataStorage.removeItem(key);\r\n    }\r\n\r\n    saveForm(formObject: Form, name: string): string {\r\n        const savedForm = this.DataStorage.setItem(`F-${name}-${Date.now()}`, JSON.stringify(formObject));\r\n        return savedForm;\r\n    }\r\n}","import { LocStorage } from './LocStorage';\r\n\r\nexport class DocumentList {\r\n    constructor() {\r\n        const localStorage = new LocStorage();\r\n        this.ListOfDocuments = localStorage.getDocuments();\r\n    }\r\n\r\n    private ListOfDocuments: string[];\r\n\r\n    getDocuments(): string[] {\r\n        return this.ListOfDocuments;\r\n    }\r\n\r\n    getDocument(id: string): object {\r\n        let documentObject;\r\n        for (const key of this.ListOfDocuments) {\r\n            if(key===id) { \r\n                documentObject = localStorage.getItem(key);\r\n            }\r\n        }\r\n        return JSON.parse(documentObject);\r\n    }\r\n\r\n    getLength(): number {\r\n        return this.getDocuments().length;\r\n    }\r\n\r\n    render(container: HTMLElement): void {\r\n        const table = document.createElement('table');  \r\n        table.classList.add('table', 'table-striped', 'table-responsive-sm');\r\n        for (let r = 0; r < this.ListOfDocuments.length; r++) {\r\n            const row = document.createElement('tr');\r\n            for (let c = 0; c < 4; c++) {\r\n                let cell = document.createElement('td');\r\n                if(c==0) { cell.appendChild(document.createTextNode((r+1).toString()));}\r\n                else if(c==1) { cell.appendChild(document.createTextNode(this.ListOfDocuments[r]));}\r\n                else if(c==2) { \r\n                    let penElement = document.createElement('span');\r\n                    penElement.classList.add(\"fa\", \"fa-pen\", \"hov\");\r\n                    penElement.addEventListener('click', (ev) => {\r\n                        ev.stopImmediatePropagation();\r\n                        ev.preventDefault();\r\n                        window.location.href= `../edit-document/edit-document.html?id=${this.ListOfDocuments[r]}`;\r\n                    });\r\n                    cell.appendChild(penElement);\r\n                }\r\n                else { \r\n                    let binElement = document.createElement('span');\r\n                    binElement.classList.add(\"fa\", \"fa-trash\", \"hov\");\r\n                    binElement.addEventListener('click', (ev) => {\r\n                        ev.stopImmediatePropagation();\r\n                        ev.preventDefault();\r\n                        const value = confirm(\"Are you sure about deleting this document?\");\r\n                        if (value===true) {\r\n                        this.removeDocument(this.ListOfDocuments[r]);\r\n                        }\r\n                    });\r\n                    cell.appendChild(binElement); \r\n                }\r\n                row.appendChild(cell);     \r\n            }\r\n            table.appendChild(row);\r\n        }\r\n        container.appendChild(table);\r\n    }\r\n\r\n    removeDocument(id: string): any {\r\n        window.localStorage.removeItem(id);\r\n        window.location.href = \"document-list.html\";\r\n    }\r\n}","import { DocumentList } from '../../classes/DocumentList';\r\nconst mainContainer = document.getElementById('main');\r\nconst documents = new DocumentList();\r\nif (documents.getLength() === 0) {\r\n    mainContainer.append('You don\\'t have any saved documents yet');\r\n} else {\r\n    documents.render(mainContainer);\r\n}\r\n"]}