{"version":3,"sources":["classes/fields/FieldLabel.ts","enums/field-type.enum.ts","classes/fields/InputField.ts","classes/fields/CheckboxField.ts","classes/fields/DateField.ts","classes/fields/EmailField.ts","classes/fields/SelectField.ts","classes/fields/TextAreaField.ts","classes/Deserializer.ts","classes/LocStorage.ts","classes/Router.ts","classes/Form.ts","classes/App.ts","classes/DocumentList.ts","components/edit-document/edit-document.ts"],"names":[],"mappings":"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","file":"edit-document.7c130377.js","sourceRoot":"..\\src","sourcesContent":["export class FieldLabel  {\r\n    constructor(container: HTMLElement, tagStyle: string, content: string){\r\n        const element = document.createElement(\"LABEL\");\r\n        element.className = tagStyle;\r\n        element.innerHTML = content;\r\n        container.appendChild(element);\r\n    };\r\n} \r\n\r\n","export enum FieldType {\r\n    Textbox = \"text\",\r\n    Textlargebox = \"textarea\",\r\n    Date = \"date\",\r\n    Email = \"email\",\r\n    Selectbox = \"radio\",\r\n    Checkbox = \"checkbox\"\r\n}","import { FieldLabel } from './FieldLabel';\r\nimport { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\n\r\nexport class InputField implements IField {\r\n\r\n    constructor(name: string, label: string, value: string) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n    \r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Textbox;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n\r\n    render(container: HTMLElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.classList.add('form-control');\r\n        element.setAttribute('type', this.Type);\r\n        fieldContainer.appendChild(element);\r\n        container.appendChild(fieldContainer);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n    \r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class CheckboxField implements IField {\r\n    constructor(name: string, label: string, value: boolean) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Checkbox;\r\n    Value: boolean;\r\n    Input: HTMLInputElement;\r\n\r\n    render(container: HTMLElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        //element.classList.add('form-control');\r\n        element.setAttribute('type', this.Type);\r\n        fieldContainer.appendChild(element);\r\n        container.appendChild(fieldContainer);\r\n        this.Input = element;\r\n        if(this.Value === true) { element.checked = true };\r\n        element.addEventListener('change', () => {\r\n            if(element.checked == true) {\r\n                this.Value = true;\r\n            } else {\r\n                this.Value = false;\r\n            }\r\n        });\r\n    }\r\n    \r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = true;\r\n    }\r\n\r\n    getValue(): boolean{\r\n        return this.Value;\r\n    }\r\n}","import { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class DateField  implements IField {\r\n    constructor(name: string, label: string, value: string | null) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Date;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.classList.add('form-control');\r\n        element.setAttribute('type', this.Type);\r\n        fieldContainer.appendChild(element);\r\n        container.appendChild(fieldContainer);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('change', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class EmailField  implements IField {\r\n    constructor(name: string, label: string, value: string | '') {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Email;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.classList.add('form-control');\r\n        element.setAttribute('type', this.Type);\r\n        fieldContainer.appendChild(element);\r\n        container.appendChild(fieldContainer);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class SelectField  implements IField {\r\n\r\n    constructor(name: string, label: string, options: string[], value: string | null) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Options = options;\r\n        this.Value = value;\r\n    }\r\n    \r\n    Name: string;    \r\n    Label: string;\r\n    Options: string[];\r\n    Type: FieldType = FieldType.Selectbox;\r\n    Value: string;\r\n    Input: HTMLSelectElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('select');\r\n        element.classList.add('form-control');\r\n        fieldContainer.appendChild(element);\r\n        container.appendChild(fieldContainer);\r\n        this.Options.forEach( (text) => {\r\n            const optionElement = document.createElement('option');\r\n            optionElement.value = text;\r\n            optionElement.innerHTML = text;\r\n            element.appendChild(optionElement);\r\n        })\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('change', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n    \r\n}","import { IField } from '../../interfaces/ifield';\r\nimport { FieldType } from '../../enums/field-type.enum';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class TextAreaField  implements IField {\r\n    constructor(name: string, label: string, value: string) {\r\n        \r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Textlargebox;\r\n    Value: string;\r\n    Input: HTMLTextAreaElement;\r\n\r\n    render(container: HTMLTextAreaElement): void {\r\n        const fieldContainer = document.createElement('div');\r\n        fieldContainer.classList.add('form-group');\r\n        new FieldLabel(fieldContainer, 'question-label', this.Label);\r\n        const element = document.createElement('textarea');\r\n        element.classList.add('form-control');\r\n        element.value = this.Value;\r\n        fieldContainer.appendChild(element);   \r\n        container.appendChild(fieldContainer);  \r\n        this.Input = element;\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n    \r\n    setValue(event: Event): any {    \r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n    \r\n}","import { IField } from './../interfaces/ifield';\r\nimport { InputField } from './fields/InputField';\r\nimport { CheckboxField } from './fields/CheckboxField';\r\nimport { DateField } from './fields/DateField';\r\nimport { EmailField } from './fields/EmailField';\r\nimport { SelectField } from './fields/SelectField';\r\nimport { TextAreaField } from './fields/TextAreaField';\r\n\r\nexport class Deserializer {\r\n    \r\n    constructor() {\r\n        \r\n    }\r\n\r\n    static Deserialize(documentObject: any): IField[] {\r\n        const newFields: IField[] = [];\r\n        const objEntries = Object.entries(documentObject);\r\n        const arrayOfObjects = objEntries[0][1];\r\n        for(const element of arrayOfObjects) {\r\n            switch (element.Type) {\r\n                case 'text':\r\n                    const instance1 = new InputField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance1, element);\r\n                    newFields.push(instance1);\r\n                    break;\r\n                case 'checkbox':\r\n                    const instance2 = new CheckboxField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance2, element);\r\n                    newFields.push(instance2);\r\n                    break;\r\n                case 'date':\r\n                    const instance3 = new DateField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance3, element);\r\n                    newFields.push(instance3);\r\n                    break;\r\n                case 'email':\r\n                    const instance4 = new EmailField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance4, element);\r\n                    newFields.push(instance4);\r\n                    break;\r\n                case 'radio':\r\n                    const instance5 = new SelectField(element.Name, element.Label, [], element.Value);\r\n                    Object.assign(instance5, element);\r\n                    newFields.push(instance5);\r\n                    break;\r\n                case 'textarea':\r\n                    const instance6 = new TextAreaField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance6, element);\r\n                    newFields.push(instance6);\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return newFields;\r\n    } \r\n}\r\n        \r\n","import { IDataStorage } from \"../interfaces/idata-storage\";\r\nimport { Form } from \"./Form\";\r\n\r\nexport class LocStorage implements IDataStorage {\r\n\r\n    constructor() {\r\n        this.DataStorage = window.localStorage;   \r\n    }\r\n\r\n    DataStorage: any;\r\n\r\n    saveDocument(documentObject: Form): string {\r\n        const savedDocument = this.DataStorage.setItem(`document-${Date.now()}`, JSON.stringify(documentObject));\r\n        return savedDocument;\r\n    }    \r\n\r\n    saveEditedDocument(documentObject: Form, key: string): string {\r\n        const savedDocument = this.DataStorage.setItem(key, JSON.stringify(documentObject));\r\n        return savedDocument;\r\n    }\r\n\r\n    loadDocument(key: string): object {\r\n        const loadedDocument = this.DataStorage.getItem(key);\r\n        return loadedDocument;\r\n    }\r\n\r\n    getDocuments(): string[] {\r\n        const documents: object = {...this.DataStorage};\r\n        const documentsArray: string[] = [];\r\n        for(let key in documents) {\r\n            if (key.substr(0,2)!='F-') {\r\n                if (!documents.hasOwnProperty(key)) continue;\r\n                documentsArray.push(key);\r\n            } \r\n        }\r\n        return documentsArray;\r\n    }\r\n\r\n    getForms(): string[] {\r\n        const formsArray: string[] = [];\r\n        const forms = {...this.DataStorage};\r\n        const formsKeysList = Object.keys(forms);\r\n        for (const name of formsKeysList) {\r\n            if (name.substr(0,2)=='F-') {\r\n                formsArray.push(name);\r\n            }\r\n        }\r\n        return formsArray;\r\n    }\r\n\r\n    removeDocument(key: string): void {\r\n        this.DataStorage.removeItem(key);\r\n    }\r\n\r\n    saveForm(formObject: Form, name: string): string {\r\n        const savedForm = this.DataStorage.setItem(`F-${name}-${Date.now()}`, JSON.stringify(formObject));\r\n        return savedForm;\r\n    }\r\n}","export class Router {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    static getParam(): string {\r\n        const query: string = window.location.search.substr(1);\r\n        const urlParams = new URLSearchParams(query); \r\n        const id = urlParams.get('id') \r\n        return id;\r\n    }\r\n}","import { LocStorage } from './LocStorage';\r\nimport { IField } from './../interfaces/ifield';\r\nimport { Router } from './Router';\r\n\r\n\r\nexport class Form {\r\n    constructor(fields: IField[]) {\r\n         this.fieldsArray = fields;\r\n    }\r\n\r\n    private fieldsArray: IField[];\r\n\r\n    render(container: HTMLElement): void {\r\n        const formDocument: HTMLElement = document.createElement(\"form\");\r\n        formDocument.classList.add(\"form-horizontal\");\r\n        const saveButton = document.createElement('button');\r\n        saveButton.classList.add('btn');\r\n        saveButton.innerHTML = \"Save\";\r\n        const backwardButton = document.createElement('button');\r\n        backwardButton.classList.add('btn', 'btn-back');\r\n        backwardButton.innerHTML = \"Back\";\r\n        this.fieldsArray.forEach(field => {field.render(formDocument)});\r\n        formDocument.appendChild(saveButton);\r\n        saveButton.addEventListener('click', (ev) => { \r\n            ev.preventDefault();\r\n            ev.stopImmediatePropagation();\r\n            if(Router.getParam() != null && !Router.getParam().startsWith('F-')) {\r\n                this.saveEdit(this, Router.getParam());\r\n            }\r\n            else { \r\n                this.save(this); \r\n            }\r\n        });\r\n        formDocument.appendChild(backwardButton);\r\n        backwardButton.addEventListener('click', function(ev) {\r\n            ev.preventDefault();\r\n            ev.stopImmediatePropagation();\r\n            window.location.replace('../document-list/document-list.html');\r\n        });\r\n        container.appendChild(formDocument);\r\n    }\r\n\r\n    getValue(): object {\r\n        return this.fieldsArray.map(field => {\r\n            return {type: field.Type, label: field.Label, name: field.Name, value: field.Value };\r\n        })\r\n    }\r\n\r\n    saveEdit(data: Form, key: string): void {\r\n        const storage = new LocStorage();\r\n        storage.saveEditedDocument(data, key);\r\n        alert(\"Document edited\");\r\n        window.location.href = \"../document-list/document-list.html\";\r\n    }\r\n    \r\n    save(data: Form): void {\r\n        const storage = new LocStorage();\r\n        storage.saveDocument(data);\r\n        alert(\"Document saved\");    \r\n        window.location.href = \"../../index.html\";\r\n    }   \r\n}","import { Deserializer } from './Deserializer';\r\nimport { TextAreaField } from './fields/TextAreaField';\r\nimport { SelectField } from './fields/SelectField';\r\nimport { EmailField } from './fields/EmailField';\r\nimport { DateField } from './fields/DateField';\r\nimport { CheckboxField } from './fields/CheckboxField';\r\nimport { InputField } from './fields/InputField';\r\nimport { Form } from './Form';\r\nimport { IField } from './../interfaces/ifield';\r\n\r\nexport class App {\r\n    constructor() {\r\n        const fields: IField[] = [];\r\n        this.populateTestArray(fields);\r\n        this.DocumentContainer = document.getElementById('main');\r\n        this.TestFormm = new Form(fields);\r\n    }\r\n\r\n    populateTestArray(fields: IField[]): void{\r\n        fields.push(new InputField('input-test', 'Czy podoba Ci się nauka na WSEI?', 'test'));\r\n        fields.push(new CheckboxField('checkbox-test1', 'Czy preferujesz e-learning?','test'));\r\n        fields.push(new CheckboxField('checkbox-test2', 'Checkbox2','test'));\r\n        fields.push(new CheckboxField('checkbox-test3', 'Checkbox3','test'));\r\n        fields.push(new DateField('date-test', 'Data', ''));\r\n        fields.push(new EmailField('email-test', 'E-mail', 'test'));\r\n        fields.push(new SelectField('select-test', 'Wybrany kierunek studiów:', ['Informatyka', 'Ekonometria', 'Psychologia'] ,''));\r\n        fields.push(new TextAreaField('textarea-test', 'Uwagi','test'));\r\n    }\r\n\r\n    DocumentContainer: HTMLElement;\r\n    TestFormm: Form;\r\n\r\n    renderDocument(form: Form): void {\r\n        form.render(this.DocumentContainer);\r\n    }\r\n\r\n    renderDocumentToEdit(documentObject: object): void {\r\n        const newFormEdit = new Form(Deserializer.Deserialize(documentObject));\r\n        newFormEdit.render(this.DocumentContainer);  \r\n    }\r\n}\r\n","import { LocStorage } from './LocStorage';\r\n\r\nexport class DocumentList {\r\n    constructor() {\r\n        const localStorage = new LocStorage();\r\n        this.ListOfDocuments = localStorage.getDocuments();\r\n    }\r\n\r\n    private ListOfDocuments: string[];\r\n\r\n    getDocuments(): string[] {\r\n        return this.ListOfDocuments;\r\n    }\r\n\r\n    getDocument(id: string): object {\r\n        let documentObject;\r\n        for (const key of this.ListOfDocuments) {\r\n            if(key===id) { \r\n                documentObject = localStorage.getItem(key);\r\n            }\r\n        }\r\n        return JSON.parse(documentObject);\r\n    }\r\n\r\n    getLength(): number {\r\n        return this.getDocuments().length;\r\n    }\r\n\r\n    render(container: HTMLElement): void {\r\n        const table = document.createElement('table');  \r\n        table.classList.add('table', 'table-striped', 'table-responsive-sm');\r\n        for (let r = 0; r < this.ListOfDocuments.length; r++) {\r\n            const row = document.createElement('tr');\r\n            for (let c = 0; c < 4; c++) {\r\n                let cell = document.createElement('td');\r\n                if(c==0) { cell.appendChild(document.createTextNode((r+1).toString()));}\r\n                else if(c==1) { cell.appendChild(document.createTextNode(this.ListOfDocuments[r]));}\r\n                else if(c==2) { \r\n                    let penElement = document.createElement('span');\r\n                    penElement.classList.add(\"fa\", \"fa-pen\", \"hov\");\r\n                    penElement.addEventListener('click', (ev) => {\r\n                        ev.stopImmediatePropagation();\r\n                        ev.preventDefault();\r\n                        window.location.href= `../edit-document/edit-document.html?id=${this.ListOfDocuments[r]}`;\r\n                    });\r\n                    cell.appendChild(penElement);\r\n                }\r\n                else { \r\n                    let binElement = document.createElement('span');\r\n                    binElement.classList.add(\"fa\", \"fa-trash\", \"hov\");\r\n                    binElement.addEventListener('click', (ev) => {\r\n                        ev.stopImmediatePropagation();\r\n                        ev.preventDefault();\r\n                        const value = confirm(\"Are you sure about deleting this document?\");\r\n                        if (value===true) {\r\n                        this.removeDocument(this.ListOfDocuments[r]);\r\n                        }\r\n                    });\r\n                    cell.appendChild(binElement); \r\n                }\r\n                row.appendChild(cell);     \r\n            }\r\n            table.appendChild(row);\r\n        }\r\n        container.appendChild(table);\r\n    }\r\n\r\n    removeDocument(id: string): any {\r\n        window.localStorage.removeItem(id);\r\n        window.location.href = \"document-list.html\";\r\n    }\r\n}","import { App } from '../../classes/App';\r\nimport { DocumentList } from '../../classes/DocumentList';\r\nimport { Router } from \"../../classes/Router\";\r\n\r\nconst id = Router.getParam();\r\nconst listOfDocuments = new DocumentList();\r\nconst requestedDocument = listOfDocuments.getDocument(id);\r\nconst app = new App();\r\napp.renderDocumentToEdit(requestedDocument);\r\n\r\n"]}